#+OPTIONS: num:nil

* About
file:branding/logo/pychum_logo.png
#+begin_export markdown
[![Hatch project](https://img.shields.io/badge/%F0%9F%A5%9A-Hatch-4051b5.svg)](https://github.com/pypa/hatch)
#+end_export
A *pure-python* project to generate input files for various common
computational chemistry workflows. This means:
- Generating input structures for ~jobflow~ / Fireworks
  + From unified ~toml~ inputs

This is a spin-off from ~wailord~ ([[https://wailord.xyz][here]]) which is meant to handle aggregated
runs in a specific workflow, while ~pychum~ is meant to generate *single runs*.
It is also a companion to ~chemparseplot~ ([[https://github.com/haoZeke/chemparseplot][here]]) which is meant to provide
uniform visualizations for the outputs of various computational chemistry
programs.
** Features
- Jobflow support
  + Along with Fireworks
- Unit aware conversions
  + Via ~pint~
*** Supported Engines
- NEB calculations
  + ORCA
  + EON
- Single point calculations
  + ORCA
  + EON
** Rationale
I needed to run a bunch of systems. ~jobflow~ / Fireworks / AiiDA were ideal,
until I realized only VASP is really well supported by them.
* Development
Before writing tests and incorporating the functions into the CLI it is helpful
to often visualize the intermediate steps. For this we can setup a complete
development environment including the notebook server.
#+begin_src bash
pixi shell
pdm sync
pdm run jupyter lab --ServerApp.allow_remote_access=1 \
    --ServerApp.open_browser=False --port=8889
#+end_src
Then go through the ~nb~ folder notebooks.
** Documentation
*** Readme
The ~readme~ can be constructed via:
#+begin_src bash
./scripts/org_to_md.sh readme_src.org readme.md
#+end_src
* License
MIT. However, this is an academic resource, so *please cite* as much as possible
via:
- The Zenodo DOI for general use.
- The ~wailord~ paper for ORCA usage

# ** Logo
# The logo was generated via DALL-E accessed through ChatGPT-4 using a prompt.
